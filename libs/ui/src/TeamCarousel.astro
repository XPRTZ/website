---
import { type Team } from "@xprtz/cms";
const team = Astro.props as Team;
const site = import.meta.env.PUBLIC_IMAGES_URL;
---

<div class="mx-auto mt-32 max-w-7xl px-6 lg:px-8">
  <div class="mx-auto max-w-2xl lg:mx-0">
    <h2
      class="text-pretty text-4xl font-semibold tracking-tight text-primary-800 sm:text-5xl"
    >
      {team.title}
    </h2>
    <p class="mt-6 text-lg/8 text-gray-600">{team.description}</p>
  </div>
  <div class="embla mt-20" data-embla>
    <div class="embla__viewport">
      <div class="embla__container">
        {
          team.members.map((member, memberIndex) => (
            <div
              class="embla__slide"
              role="group"
              aria-roledescription="slide"
              aria-label={`Team member ${memberIndex + 1} of ${team.members.length}`}
            >
              <div class="team-member text-center px-2">
                <img
                  class="mx-auto size-20 md:size-24 rounded-full"
                  src={`${site}${member.avatar.url}`}
                  alt={member.avatar.alternateText}
                />
                <h3 class="mt-4 md:mt-6 text-sm md:text-base/7 font-semibold tracking-tight text-primary-800">
                  {member.firstname} {member.lastname}
                </h3>
                <p class="text-xs md:text-sm/6 text-gray-600 pl-4 pr-4">
                  {member.realTitle}
                </p>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</div>

<style>
  .embla {
    position: relative;
    max-width: 100%;
    margin-left: auto;
    margin-right: auto;
  }

  .embla__viewport {
    overflow: hidden;
  }

  .embla__container {
    display: flex;
    touch-action: pan-y pinch-zoom;
    margin-left: calc(1rem * -1);
  }

  .embla__slide {
    flex: 0 0 20%;
    min-width: 0;
    padding-left: 1rem;
  }

  .team-member {
    flex-shrink: 0;
    width: 100%;
    padding: 1rem;
  }

  @media (max-width: 640px) {
    .embla__slide {
      flex: 0 0 50%;
    }
  }

  @media (min-width: 641px) and (max-width: 768px) {
    .embla__slide {
      flex: 0 0 33.333%;
    }
  }

  @media (min-width: 769px) and (max-width: 1024px) {
    .embla__slide {
      flex: 0 0 25%;
    }
  }

  @media (min-width: 1025px) {
    .embla__slide {
      flex: 0 0 20%;
    }
  }
</style>

<script>
  import EmblaCarousel from "embla-carousel";

  const CAROUSEL_CONFIG = {
    AUTOPLAY_INTERVAL: 5000,
    AUTOPLAY_DELAY: 1000,
    DRAG_THRESHOLD: 5,
  };

  const initEmblaCarousel = () => {
    const emblaNode = document.querySelector(".embla__viewport") as HTMLElement;

    if (!emblaNode) return;

    if (emblaNode.hasAttribute("data-embla-initialized")) {
      return;
    }
    emblaNode.setAttribute("data-embla-initialized", "true");

    const embla = EmblaCarousel(emblaNode, {
      loop: true,
      containScroll: "trimSnaps",
      slidesToScroll: 1,
      align: "start",
      dragFree: false,
      dragThreshold: CAROUSEL_CONFIG.DRAG_THRESHOLD,
      skipSnaps: false,
    });

    let autoplayInterval: NodeJS.Timeout | null = null;
    let isAutoplayPaused = false;

    const startAutoplay = () => {
      if (autoplayInterval || isAutoplayPaused) return;

      autoplayInterval = setInterval(() => {
        embla.scrollNext();
      }, CAROUSEL_CONFIG.AUTOPLAY_INTERVAL);
    };

    const stopAutoplay = () => {
      if (autoplayInterval) {
        clearInterval(autoplayInterval);
        autoplayInterval = null;
      }
    };

    const pauseAutoplay = () => {
      isAutoplayPaused = true;
      stopAutoplay();
    };

    const resumeAutoplay = () => {
      isAutoplayPaused = false;
      startAutoplay();
    };

    setTimeout(startAutoplay, CAROUSEL_CONFIG.AUTOPLAY_DELAY);

    emblaNode.addEventListener("mouseenter", pauseAutoplay);
    emblaNode.addEventListener("mouseleave", resumeAutoplay);

    return () => {
      stopAutoplay();
      embla.destroy();
      emblaNode.removeAttribute("data-embla-initialized");
    };
  };

  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", initEmblaCarousel);
  } else {
    initEmblaCarousel();
  }

  document.addEventListener("astro:page-load", initEmblaCarousel);
</script>
