---
interface Props {
  title: string;
  description: string;
  image?: string;
  imageAlt?: string;
  type?: "website" | "article";
  siteName?: string;
  author?: string;
  publishedTime?: string;
  modifiedTime?: string;
  tags?: string[];
  keywords?: string[];
  robots?: string;
  locale?: string;
  themeColor?: string;
  structuredData?: object;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const {
  title,
  description,
  image = "/blog-placeholder-1.jpg",
  imageAlt = title,
  type = "website",
  siteName = "XPRTZ",
  author,
  publishedTime,
  modifiedTime,
  tags = [],
  keywords = [],
  robots = "index, follow",
  locale = "nl_NL",
  themeColor = "#1e40af",
  structuredData,
} = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="generator" content={Astro.generator} />
<meta name="robots" content={robots} />
{themeColor && <meta name="theme-color" content={themeColor} />}

<!-- Font preloads -->
<link
  rel="preload"
  href="/fonts/AtkinsonHyperlegible-Regular.woff2"
  as="font"
  type="font/woff2"
  crossorigin
/>
<link
  rel="preload"
  href="/fonts/AtkinsonHyperlegible-Bold.woff2"
  as="font"
  type="font/woff2"
  crossorigin
/>

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
{author && <meta name="author" content={author} />}
{keywords.length > 0 && <meta name="keywords" content={keywords.join(", ")} />}

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
<meta property="og:url" content={Astro.url} />
<meta property="og:site_name" content={siteName} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />
<meta property="og:image:alt" content={imageAlt} />
<meta property="og:locale" content={locale} />
{
  type === "article" && author && (
    <meta property="article:author" content={author} />
  )
}
{
  type === "article" && publishedTime && (
    <meta property="article:published_time" content={publishedTime} />
  )
}
{
  type === "article" && modifiedTime && (
    <meta property="article:modified_time" content={modifiedTime} />
  )
}
{
  type === "article" &&
    tags.map((tag) => <meta property="article:tag" content={tag} />)
}

<!-- JSON-LD Structured Data -->
{
  structuredData &&
    (Array.isArray(structuredData) ? (
      structuredData.map((data) => (
        <script type="application/ld+json" set:html={JSON.stringify(data)} />
      ))
    ) : (
      <script
        type="application/ld+json"
        set:html={JSON.stringify(structuredData)}
      />
    ))
}
