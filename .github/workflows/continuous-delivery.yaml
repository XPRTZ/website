name: Continuous delivery workflow
run-name: Deploying website to the production environment
concurrency: continuous-delivery

on:
  workflow_dispatch:
  push:
    branches: [main]

permissions:
  id-token: write
  contents: read

jobs:
  apply-pull-request-infrastructure:
    uses: ./.github/workflows/reusable-apply-infrastructure.yaml
    with:
      suffix: production
      environment: production
      cloudSubDomain: cloud
      dotnetSubDomain: dotnet
    secrets: inherit

  build-cloud-application:
    uses: ./.github/workflows/reusable-build-application.yaml
    with:
      application: cloud
    needs: [apply-pull-request-infrastructure]

  deploy-cloud-application:
    uses: ./.github/workflows/reusable-deploy-application.yaml
    with:
      application: cloud
      storageAccount: ${{ needs.apply-pull-request-infrastructure.outputs.cloudStorageAccount }}
      resourceGroup: ${{ needs.apply-pull-request-infrastructure.outputs.resourceGroup }}
      environment: production
    needs: [apply-pull-request-infrastructure, build-cloud-application]
    secrets: inherit

  build-dotnet-application:
    uses: ./.github/workflows/reusable-build-application.yaml
    with:
      application: dotnet
    needs: [apply-pull-request-infrastructure]

  deploy-dotnet-application:
    uses: ./.github/workflows/reusable-deploy-application.yaml
    with:
      application: dotnet
      storageAccount: ${{ needs.apply-pull-request-infrastructure.outputs.dotnetStorageAccount }}
      resourceGroup: ${{ needs.apply-pull-request-infrastructure.outputs.resourceGroup }}
      environment: production
    needs: [apply-pull-request-infrastructure, build-dotnet-application]
    secrets: inherit
