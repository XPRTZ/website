name: Pull request workflow
run-name: Running pull request flow for ${{ github.head_ref }}
concurrency: pull-request-${{ github.ref_name }}

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened, closed]

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  apply-infrastructure:
    name: Apply infrastructure
    if: github.event.action != 'closed'
    uses: ./.github/workflows/reusable-apply-infrastructure.yaml
    with:
      environment: preview
      deployDns: false
    secrets: inherit

  build-cloud-application:
    name: Build XPRTZ Cloud application
    if: github.event.action != 'closed'
    uses: ./.github/workflows/reusable-build-application.yaml
    with:
      application: cloud
    needs: [apply-infrastructure]

  deploy-cloud-application:
    name: Deploy XPRTZ Cloud application
    if: github.event.action != 'closed'
    uses: ./.github/workflows/reusable-deploy-application.yaml
    with:
      application: cloud
      storageAccount: ${{ needs.apply-infrastructure.outputs.cloudStorageAccount }}
      environment: preview
    needs: [apply-infrastructure, build-cloud-application]
    secrets: inherit

  build-dotnet-application:
    name: Build XPRTZ .NET application
    if: github.event.action != 'closed'
    uses: ./.github/workflows/reusable-build-application.yaml
    with:
      application: dotnet
    needs: [apply-infrastructure]

  deploy-dotnet-application:
    name: Deploy XPRTZ .NET application
    if: github.event.action != 'closed'
    uses: ./.github/workflows/reusable-deploy-application.yaml
    with:
      application: dotnet
      storageAccount: ${{ needs.apply-infrastructure.outputs.dotnetStorageAccount }}
      environment: preview
    needs: [apply-infrastructure, build-dotnet-application]
    secrets: inherit

  build-landing-application:
      name: Build XPRTZ Landing application
      if: github.event.action != 'closed'
      uses: ./.github/workflows/reusable-build-application.yaml
      with:
        application: landing
      needs: [apply-infrastructure]

  deploy-landing-application:
      name: Deploy XPRTZ Landing application
      if: github.event.action != 'closed'
      uses: ./.github/workflows/reusable-deploy-application.yaml
      with:
        application: landing
        storageAccount: ${{ needs.apply-infrastructure.outputs.landingStorageAccount }}
        environment: preview
      needs: [apply-infrastructure, build-landing-application]
      secrets: inherit

  build-learning-application:
      name: Build XPRTZ Learning application
      if: github.event.action != 'closed'
      uses: ./.github/workflows/reusable-build-application.yaml
      with:
        application: learning
      needs: [apply-infrastructure]

  deploy-learning-application:
      name: Deploy XPRTZ Learning application
      if: github.event.action != 'closed'
      uses: ./.github/workflows/reusable-deploy-application.yaml
      with:
        application: learning
        storageAccount: ${{ needs.apply-infrastructure.outputs.learningStorageAccount }}
        environment: preview
      needs: [apply-infrastructure, build-learning-application]
      secrets: inherit

  remove-infrastructure:
    name: Remove preview environment infrastructure
    if: github.event.action == 'closed'
    uses: ./.github/workflows/reusable-destroy-infrastructure.yaml
    with:
      environment: preview
    secrets: inherit
